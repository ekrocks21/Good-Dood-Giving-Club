{"version":3,"sources":["candy-machine.ts","images/1115.png","images/surferdood.png","components/doods.tsx","images/chilldood.svg","images/portraitdood.png","images/2016.png","images/cyberdood.png","components/thedoods.tsx","images/91.png","images/2182.png","components/doodscopy.tsx","images/4615.png","images/2523.png","images/1935.png","images/1614.png","components/perks.tsx","images/1976.png","images/308.png","images/2549.png","components/teams.tsx","components/roadmap.tsx","components/roadmap2.tsx","images/Asset 6.svg","components/footer.tsx","images/happydood.png","images/Asset3.svg","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","Item","styled","Paper","theme","textAlign","BasicGrid","Grid","container","spacing","style","height","display","backgroundColor","padding","item","xs","md","elevation","color","minHeight","marginBottom","justifyContent","fontStyle","fontSize","marginTop","lg","src","ChillImage","alt","maxWidth","minWidth","Portrait","width","columns","sm","Cyber","Surfer","CyberDood","SurferDood","HappyDood","SneakerDood","CarDood","SkaterDood","href","target","createData","description","rows","BasicTable","TableContainer","component","Table","sx","marginLeft","TableHead","TableRow","TableCell","align","TableBody","map","row","border","scope","maxHeight","LogoImage","ConnectButton","WalletDialogButton","CounterText","MintContainer","div","MintButton","Button","renderCounter","days","hours","minutes","seconds","completed","Home","props","useState","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","setItemsAvailable","setItemsRedeemed","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useAnchorWallet","setCandyMachine","refreshCandyMachineState","onMint","mintTxId","txTimeout","msg","code","indexOf","getBalance","balance","LAMPORTS_PER_SOL","useEffect","flex","flexDirection","paddingLeft","paddingRight","paddingTop","toBase58","alignItems","Container","HeaderImage","position","fontWeight","disabled","onClick","variant","CircularProgress","date","onMount","onComplete","renderer","Snackbar","autoHideDuration","onClose","Alert","process","network","Connection","startDateSeed","parseInt","createTheme","palette","type","overrides","MuiButtonBase","root","MuiButton","textTransform","startIcon","marginRight","endIcon","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc55c696.chunk.js","sourcesContent":["import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","export default __webpack_public_path__ + \"static/media/1115.c7e564e5.png\";","export default __webpack_public_path__ + \"static/media/surferdood.6ed72a2d.png\";","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport ChillImage from \"../images/1115.png\";\nimport Portrait from \"../images/surferdood.png\";\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  textAlign: 'center',\n}));\n\nfunction Chill() {\n  // Import result is the URL of your image\n  return <img src={ChillImage} alt=\"Dood Chills\" />;\n}\n\nexport default function BasicGrid() {\n  return (\n      <Grid container spacing={2} style={{ height: \"auto\", display: \"flex\", backgroundColor: \"#384885\", padding: \"40px\"}}>\n        <Grid item xs={ 12 } md= {6}>\n          <Item elevation={0} style={{backgroundColor: \"#24305e\", color: \"#ffffff\", minHeight:\"250px\", padding: \"40px\"}}>\n            <h1 style={{ display: \"flex\", marginBottom: \"0px\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              WELCOME TO THE </h1>\n              <h1 style={{ display: \"flex\", marginTop: \"0px\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              GOOD DOOD GIVING CLUB </h1>\n            <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n                GDGC is a collection of 5001 Good Dood NFTs- unique digital collectibles\n                living on the Solana blockchain. Our initial mint will generate over $10m USD \n                and 10,000 gifts for St Jude patients. \n                \n                \n\n\n              </ h2>\n\n              <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n              Your Good Dood Membership proves your generosity.\n              Each quarter, 100 of you Good Doods will be rewarded with the gifts featured in your GDGC\n              membership card.\n\n\n</ h2>    \n          </Item>\n        </Grid>\n        <Grid item xs={12} md={6} lg= {3}>\n          <Item elevation={0}  style={{backgroundColor: \"#384885\"}}>\n\n          <img src={ChillImage} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n          }}\n          />\n\n          </Item>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg= {3}>\n          <Item elevation={0}  style={{backgroundColor: \"#384885\"}}>\n\n          <img src={Portrait} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n          }}\n          />\n\n          </Item>\n        </Grid>\n\n        \n      </Grid>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/chilldood.2d73ffc9.svg\";","export default __webpack_public_path__ + \"static/media/portraitdood.8f679cf0.png\";","export default __webpack_public_path__ + \"static/media/2016.3adb22bb.png\";","export default __webpack_public_path__ + \"static/media/cyberdood.1999e03e.png\";","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport ChillImage from \"../images/chilldood.svg\";\nimport Portrait from \"../images/portraitdood.png\";\nimport Surfer from \"../images/2016.png\";\nimport Cyber from \"../images/cyberdood.png\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  textAlign: 'center',\n  justifyContent: 'center',\n  width: 400,\n  height: 400,\n\n}));\n\nfunction Chill() {\n  // Import result is the URL of your image\n  return <img src={ChillImage} alt=\"Dood Chills\" />;\n}\n\nexport default function BasicGrid() {\n  return (\n      <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }} style={{ height: \"auto\", backgroundColor: \"#212121\", padding: \"40px\", justifyContent: \"space-between\", }}>\n        <Grid item xs={ 12 } sm={3} md= {4}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", padding:\"15px\",}}>\n          <img src={Cyber} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              height: \"auto\",\n          }}\n          />\n\n          </Item>\n        </Grid>\n        <Grid item xs={ 12 } sm={3} md= {4}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", padding:\"15px\"}}>\n          <img src={Portrait} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              height: \"auto\",\n          }}\n          />\n\n          </Item>\n        </Grid>\n        <Grid item xs={ 12 } sm={3} md= {4}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", padding:\"15px\"}}>\n          <img src={Surfer} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              height: \"auto\",\n          }}\n          />\n\n          </Item>\n        </Grid>\n      </Grid>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/91.6d34af43.png\";","export default __webpack_public_path__ + \"static/media/2182.4d23860a.png\";","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport SurferDood from \"../images/91.png\";\nimport CyberDood from \"../images/2182.png\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  textAlign: 'center',\n}));\n\nfunction Chill() {\n  // Import result is the URL of your image\n  return <img src={CyberDood} alt=\"Dood Chills\" />;\n}\n\nexport default function BasicGrid() {\n  return (\n      <Grid container spacing={2} style={{ height: \"auto\", display: \"flex\", backgroundColor: \"#384885\", padding: \"40px\"}}>\n        <Grid item xs={ 12 } md= {6}>\n          <Item elevation={0} style={{backgroundColor: \"#24305e\", color: \"#ffffff\", minHeight:\"250px\", padding: \"40px\"}}>\n            <h1 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              OUR GIVING MODEL </h1>\n            <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n            Each Good Dood is unique and programmatically generated with over \n            10,000 gifts, including Raybans, Melin Hats, Super73 E-Bikes,\n            Cyberquads, Legos, Watches, Inspiration4 Space Puppies, and more. All Good Doods are givers, but some give more than others.\n                \n                \n\n\n              </ h2>\n\n              <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n              Good Doods are stored as SPL tokens on the Solana blockchain (low gas) and hosted on \n              IPFS. Purchasing a Good Dood costs 25 SOL.\n\n\n</ h2>    \n          </Item>\n        </Grid>\n        <Grid item xs={12} md={6} lg= {3}>\n          <Item elevation={0}  style={{backgroundColor: \"#384885\"}}>\n\n          <img src={CyberDood} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n          }}\n          />\n\n          </Item>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg= {3}>\n          <Item elevation={0}  style={{backgroundColor: \"#384885\"}}>\n\n          <img src={SurferDood} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n          }}\n          />\n\n          </Item>\n        </Grid>\n\n        \n      </Grid>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/4615.6c2b5211.png\";","export default __webpack_public_path__ + \"static/media/2523.3c230b51.png\";","export default __webpack_public_path__ + \"static/media/1935.11aac803.png\";","export default __webpack_public_path__ + \"static/media/1614.39d719c3.png\";","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport SurferDood from \"../images/91.png\";\nimport CyberDood from \"../images/2182.png\";\nimport HappyDood from \"../images/4615.png\";\nimport SkaterDood from \"../images/2523.png\";\nimport CarDood from \"../images/1935.png\";\nimport SneakerDood from \"../images/1614.png\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  textAlign: 'center',\n}));\n\nfunction Chill() {\n  // Import result is the URL of your image\n  return <img src={CyberDood} alt=\"Dood Chills\" />;\n}\n\nexport default function BasicGrid() {\n  return (\n      <Grid container spacing={0} style={{ height: \"auto\", display: \"flex\", backgroundColor: \"#212121\", padding: \"40px\"}}>\n        <Grid item xs={ 12 } md= {6} lg= {10}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", minHeight:\"20px\", padding: \"40px\"}}>\n            <h1 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              MEMBERSHIP PERKS </h1>\n            <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n            When you buy a Good Dood, you’re not simply buying an avatar or a provably-rare piece of art. \n            You are generating cash that directly funds Do Good Projects, like Operation Giving Day. Our roadmap includes \n            a democratized giving model providing the community with choice over which Do Good Projects to pursue.\n            Your Good Dood can serve as your digital identity - proving your generosity, and open digital and physical \n            doors in the world of impact.\n                \n\n\n</ h2>    \n          </Item>\n        </Grid>\n\n        <Grid item xs={ 12 } md= {3} lg= {3}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", minHeight:\"250px\", padding: \"40px\"}}>\n       \n          <h1 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              EXCLUSIVE TITLE </h1>\n\n          <img src={HappyDood} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n          }}\n          />\n\n<h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\nYou are one of only 5001 maximum Good Doods in The Original GDGC.\n\n\n</ h2>  \n  \n          </Item>\n        </Grid>\n\n        <Grid item xs={ 12 } md= {3} lg= {3}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", minHeight:\"250px\", padding: \"40px\"}}>\n       \n          <h1 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              HONEST GIVING</h1>\n\n          <img src={SneakerDood} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n          }}\n          />\n\n<h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n50% of Mint and 50% of secondary market commissions fund Community Chosen Do Good Projects.\n\n\n</ h2>  \n\n  \n          </Item>\n        </Grid>\n\n        <Grid item xs={ 12 } md= {3} lg= {3}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", minHeight:\"250px\", padding: \"40px\"}}>\n       \n          <h1 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              COOL GIFTS </h1>\n\n          <img src={CarDood} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n          }}\n          />\n\n<h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\nQuarterly gifts for Good Doods and 10,000+ gifts for St Jude patients.\n\n\n</ h2>  \n\n  \n          </Item>\n        </Grid>\n\n        <Grid item xs={ 12 } md= {3} lg= {3}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", minHeight:\"250px\", padding: \"40px\"}}>\n       \n          <h1 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              OWNERSHIP </h1>\n\n          <img src={SkaterDood} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n          }}\n          />\n\n<h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\nYou hold the Dood? You own the commercial usage rights.\n\n\n</ h2>  \n\n  \n          </Item>\n        </Grid>\n  \n\n  \n\n        \n      </Grid>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/1976.bace866b.png\";","export default __webpack_public_path__ + \"static/media/308.e5aa99ec.png\";","export default __webpack_public_path__ + \"static/media/2549.1fb3659d.png\";","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport SurferDood from \"../images/1976.png\";\nimport CyberDood from \"../images/308.png\";\nimport SkaterDood from \"../images/2549.png\";\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  textAlign: 'center',\n}));\n\nfunction Chill() {\n  // Import result is the URL of your image\n  return <img src={CyberDood} alt=\"Dood Chills\" />;\n}\n\nexport default function BasicGrid() {\n  return (\n      <Grid container spacing={2} style={{ height: \"auto\", display: \"flex\", backgroundColor: \"#212121\", padding: \"40px\"}}>\n        <Grid item xs={ 12 } md= {6}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", minHeight:\"250px\", padding: \"40px\"}}>\n            <h1 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              OUR TEAM </h1>\n            <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n            GDGC was created by a husband, wife, and puppy combo who were inspired by Inspiration4. We set out to apply our talents,\n            learn new skills, and try to make a difference by building something kinda crazy that actually would work.\n                \n                \n\n\n              </ h2>\n\n              <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n              UNCLE ARC: TYPICAL WILD IDEA DOOD. PUNCHES ABOVE BELT.\n              </ h2>    \n\n              <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n             LIBIT: GREAT AT DOING GOOD AT SCALE. BEAT CANCER AT 19. \n            </ h2>      \n\n            <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n            DAY-Z: LOOKS GOOD ON CAMERA. \n</ h2>    \n\n          </Item>\n        </Grid>\n        <Grid item xs={12} md={6} lg= {2}>\n          <Item elevation={0}  style={{backgroundColor: \"#212121\"}}>\n\n          <img src={SkaterDood} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n              marginTop: \"50px\"\n          }}\n          />\n\n          </Item>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg= {2}>\n          <Item elevation={0}  style={{backgroundColor: \"#212121\"}}>\n\n          <img src={CyberDood} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n              marginTop: \"50px\"\n          }}\n          />\n\n          </Item>\n        </Grid>\n\n\n        <Grid item xs={12} md={6} lg= {2}>\n          <Item elevation={0}  style={{backgroundColor: \"#212121\"}}>\n\n          <img src={SurferDood} alt=\"Logo\"\n            style={{\n              maxWidth: \"100%\",\n              minWidth: \"100px\",\n              height: \"auto\",\n              marginTop: \"50px\"\n          }}\n          />\n\n          </Item>\n        </Grid>\n\n        \n      </Grid>\n  );\n}\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport SurferDood from \"../images/91.png\";\nimport CyberDood from \"../images/2182.png\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  textAlign: 'center',\n}));\n\nfunction Chill() {\n  // Import result is the URL of your image\n  return <img src={CyberDood} alt=\"Dood Chills\" />;\n}\n\nexport default function BasicGrid() {\n  return (\n      <Grid container spacing={0} style={{ height: \"auto\", display: \"flex\", backgroundColor: \"#212121\", padding: \"40px\"}}>\n        <Grid item xs={ 12 } md= {6} lg= {10}>\n          <Item elevation={0} style={{backgroundColor: \"#212121\", color: \"#ffffff\", minHeight:\"20px\", padding: \"40px\"}}>\n            <h1 style={{ display: \"flex\", marginBottom: \"0px\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              ROADMAP AND </h1>\n              <h1 style={{ display: \"flex\", marginTop: \"0px\", justifyContent: \"left\", textAlign: \"left\", fontStyle:\"italic\", fontSize: \"24px\"}}>\n              OPERATION GIVING DAY</h1>\n            <h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\n            We want to make a real impact on the physical world with our digital art. \n                \n\n\n</ h2>    \n\n<h2 style={{ display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\"}}>\n\nThe Original Good Dood Collection and Operation Giving Day are just the beginning of our journey.\n    \n\n\n</ h2>    \n\n<a href=\" https://trello.com/goodgoodgivingclub\" target=\"blank\" style={{ color: \"#a8cfe5\", display: \"flex\", justifyContent: \"left\", textAlign: \"justify\", fontSize:\"18px\" }}>\n\nView our roadmap \n    \n\n\n</ a>   \n\n          </Item>\n        </Grid>\n\n\n  \n        \n      </Grid>\n  );\n}\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport CyberDood from \"../images/2182.png\";\n\nfunction createData(\n  id: number,\n  description: string,\n  status: string,\n\n\n) {\n  return { id, description, status };\n}\n\n\nconst rows = [\n  createData( 1, 'Develop Giving Model and Identify Operation Giving Day Beneficiary', 'Complete' ),\n  createData( 2, 'Create Initial Art Concept #00 - The Original Good Dood Collection ', 'Complete' ),\n  createData( 3, 'Learn how to generate 5001 NFTs', 'Complete' ),\n  createData( 4, 'Develop Art Engine', 'Complete' ),\n  createData( 5, 'Learn how to mint to Solana', 'Complete' ),\n  createData( 6, 'Develop Minting Platform', 'Complete' ),\n  createData( 7, 'Build Landing Page Website', 'Complete' ),\n  createData( 8, 'Connect with Jared Isaacman - Commander Inspiration4 ', 'Need Support' ),\n  createData( 9, 'Connect with St Jude to ensure this is cool with them / incorporate feedback', 'Need Support' ),\n  createData( 10, 'Update Collection based on Feedback', 'Need Support' ),\n  createData( 11, 'Prepare for Launch', 'Need Support' ),\n  createData( 12, 'Ask Elon to Tweet ', 'Need Support' ),\n  createData( 13, 'Launch OG Collection ', 'In Progress' ),\n  createData( 14, 'Sell out Mint ', 'In Progress' ),\n  createData( 15, 'Procure Products from Brands ', 'Dependent on #7' ),\n  createData( 16, 'Plan and Execute Operation Giving Day ', 'In Progress' ),\n  createData( 17, 'Transfer Research Grant to St Jude ', 'Dependent on #7' ),\n  createData( 18, 'Form Partnership with Brands ', 'Need Support' ),\n  createData( 19, 'Determine Democratized Giving Model', 'Open for Feedback' ),\n  createData( 20, 'Create Collection #01 Art Concept', 'Not Started' ),\n  createData( 21, 'Partner with an actual NFT Designer ', 'Search Started' ),\n  createData( 22, 'Design and Launch Good Dood Collection #01 - TBD ', 'Need Support' ),\n  createData( 23, '? ', '?' ),\n];\n\nexport default function BasicTable() {\n  return (\n\n    <TableContainer component={Paper} style={{ backgroundColor: \"#212121\",  marginBottom: \"40px\" }}>\n      <Table sx={{ maxWidth: 400 }} style={{ backgroundColor: \"#212121\", height: \"auto\", marginLeft: \"80px\",}} aria-label=\"simple table\">\n        <TableHead >\n          <TableRow >\n            <TableCell style={{ color: \"#ffffff\"}} align=\"left\">ID</TableCell>\n            <TableCell style={{ color: \"#ffffff\"}} >Description</TableCell>\n            <TableCell style={{ color: \"#ffffff\"}} >Status</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow style={{ color: \"#ffffff\"}}\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell style={{ color: \"#ffffff\",}} component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell style={{ color: \"#ffffff\", }} >{row.description}</TableCell>\n              <TableCell style={{ color: \"#ffffff\", }} >{row.status}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n\n  );\n}","export default __webpack_public_path__ + \"static/media/Asset 6.b4f9fe9c.svg\";","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport ChillImage from \"../images/chilldood.svg\";\nimport Portrait from \"../images/portraitdood.png\";\nimport Surfer from \"../images/2016.png\";\nimport Cyber from \"../images/cyberdood.png\";\nimport LogoImage from \"../images/Asset 6.svg\";\nimport TwitterIcon from '@mui/icons-material/Twitter';\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n  height: 150,\n  justifyContent: \"center\",\n  padding: \"10%\"\n\n}));\n\n\nexport default function BasicGrid() {\n  return (\n      <Grid container spacing={{ xs: 2, md: 3 }}  style={{ height: \"auto\", backgroundColor: \"#24305e\",  }}>\n        <Grid item xs={ 12 } sm={12} md= {4} lg= {4}>\n          <Item elevation={0} style={{backgroundColor: \"#24305e\",  color: \"#ffffff\", maxHeight: \"20px\",}}>\n\n\n\n          </Item>\n        </Grid>\n        <Grid item xs={ 12 } sm={12} md= {4} lg= {4}>\n          <Item elevation={0} style={{backgroundColor: \"#24305e\", color: \"#ffffff\", }}>\n\n          <img src={LogoImage} alt=\"Logo\"\n            style={{\n            height: \"90%\",\n            minWidth: \"100%\",\n            marginBottom: \"50px\",\n            display: \"flex\",\n            justifyContent: \"center\"}}\n          />\n\n\n          </Item>\n        </Grid>\n        <Grid item xs={ 12 } sm={12} md= {4} lg= {4}>\n          <Item elevation={0} style={{backgroundColor: \"#24305e\", color: \"#ffffff\",  textAlign: \"right\", marginTop: \"20px\"  }}>\n            <a href=\"https://twitter.com/gooddoodNFT\" target=\"blank\" style={{color: \"#ffffff\" }}><TwitterIcon ></TwitterIcon></a>\n            <br></br>\n          <a >© 2021 Good Dood LLC</a>\n          <br></br>\n            <a href=\"www.google.com\" style={{color: \"#a8cfe5\", }}>GDGC Terms and Conditions</a>\n            <br></br>\n\n\n\n          </Item>\n        </Grid>\n      </Grid>\n  );\n}\n\n\n\n","export default __webpack_public_path__ + \"static/media/happydood.dc3b37ab.png\";","export default __webpack_public_path__ + \"static/media/Asset3.7f9bf489.svg\";","import Faq from \"./components/faq\";\nimport Doods from \"./components/doods\";\nimport TheDoods from \"./components/thedoods\"\nimport TheDoods2 from \"./components/doodscopy\"\nimport Perks from \"./components/perks\"\nimport Drawer from \"./components/drawer\"\nimport Team from \"./components/teams\"\nimport Roadmap from \"./components/roadmap\"\nimport Roadmap2 from \"./components/roadmap2\"\nimport Footer from \"./components/footer\"\n\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Container, Accordion, AccordionSummary, AccordionDetails, Button, CircularProgress, Snackbar, Grid, Paper, Box,BoxProps, Card, Typography, CardMedia, CardContent, CardActions, } from \"@material-ui/core\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Alert from \"@material-ui/lab/Alert\";\nimport HeaderImage from \"./images/happydood.png\";\nimport LogoImage from \"./images/Asset3.svg\";\nimport ChillImage from \"./images/chilldood.svg\";\nimport faq from \"./components/faq\"\nimport * as anchor from \"@project-serum/anchor\";\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n      refreshCandyMachineState();\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n  function Header() {\n    // Import result is the URL of your image\n    return <img src={HeaderImage} alt=\"Good Doods Hero Image\" />;\n  }\n\n  function Logo() {\n    // Import result is the URL of your image\n    return <img src={LogoImage} alt=\"Good Doods Logo\" />;\n  }\n\n\n  function Chill() {\n    // Import result is the URL of your image\n    return <img src={ChillImage} alt=\"Dood Chills\" />;\n  }\n\n\n\n  return (\n\n    <main style={{ display: \"flex\", height: \"100vh\", backgroundColor: \"#24305e\",}}>\n      \n      <div style={{padding: \"30\", display: \"flex\", flex: 1, flexDirection: \"column\", }}>\n\n       <div style={{display: \"flex\", justifyContent: \"space-between\", maxHeight: \"120px\", paddingLeft: '5%', paddingRight:'10%', paddingTop: '3%' }}>\n          <img src={LogoImage} alt=\"Logo\"\n            style={{\n            maxWidth: \"20%\",\n            height: \"auto\",\n            marginLeft: \"20px\",\n            minWidth: \"15%\",\n            display: \"flex\",\n            justifyContent: \"left\"}}\n          />\n          {wallet && (<p>Wallet {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>)}\n      \n          <ConnectButton >{wallet ? \"Connected\" : \"Connect Wallet\" }</ConnectButton>\n          \n\n          \n\n        \n    </div> \n\n  \n\n\n    <div style={{ flex: 1, display: \"flex\",justifyContent: \"center\",alignItems: \"center\",flexDirection: \"column\",}}>\n      \n     <Container style={{flex: 1, display: \"flex\",justifyContent: \"center\", alignItems: \"center\",flexDirection: \"column\", padding: \"20px\" }}>\n      <img src={HeaderImage} alt=\"Header\"\n        style={{\n        maxWidth: \"40%\",\n        minWidth: \"300px\",\n        height: \"auto\",\n        }}\n        \n      />\n\n<MintContainer style ={{backgroundColor: \"#384885\", position: \"absolute\"}}>\n          <MintButton style ={{backgroundColor: \"#ffffff\", color: \"#000000\", width: \"200px\", justifyContent: \"center\", fontWeight: \"bold\"}} disabled={isSoldOut || isMinting || !isActive} onClick={onMint} variant=\"contained\">\n            {isSoldOut ? (\n              \"SOLD OUT\"\n            ) : isActive ? (\n              isMinting ? (\n                <CircularProgress />\n              ) : (\n                \"Be a Good Dood\"\n              )\n            ) : (\n              <Countdown\n                date={startDate}\n                onMount={({ completed }) => completed && setIsActive(true)}\n                onComplete={() => setIsActive(true)}\n                renderer={renderCounter}\n              />\n            )}\n          </MintButton>\n      </MintContainer>\n\n</Container>\n\n      <div style={{\n        padding: \"30\",\n        display: \"flex\",\n        flex: 1,\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        backgroundColor: \"#384885\",\n       }}>   \n\n\n\n\n\n      {wallet && <p>Supply: {itemsRedeemed}/{itemsAvailable}</p>}\n        </div>\n        </div>  \n\n      <div style={{\n        padding: \"30\",\n        display: \"flex\",\n        flex: 1,\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n       }}>\n    </div>\n\n    <div style={{\n        display: \"flex\",\n        flex: 1,\n        flexDirection: \"column\",\n       }}>\n\n    <Doods/>\n    <div><TheDoods2/></div>\n    <div><Perks/></div>\n    <div><Roadmap/></div>\n    <div><Roadmap2/></div>\n\n\n    </div>\n\n    <div><TheDoods/></div>\n\n\n\n    <div>\n      <Team/>\n    </div>\n\n    <div>\n      <Footer/>\n    </div>\n\n\n\n      <Snackbar open={alertState.open} autoHideDuration={6000} onClose={() => setAlertState({ ...alertState, open: false })}>\n        <Alert onClose={() => setAlertState({ ...alertState, open: false })} severity={alertState.severity}>\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n\n      </div>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;\n\n","import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\n\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect={true}>\n            <WalletDialogProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                config={config}\n                connection={connection}\n                startDate={startDateSeed}\n                treasury={treasury}\n                txTimeout={txTimeout}\n              />\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}