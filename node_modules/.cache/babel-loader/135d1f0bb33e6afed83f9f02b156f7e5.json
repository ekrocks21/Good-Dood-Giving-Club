{"ast":null,"code":"var _jsxFileName = \"/Users/erickane/Desktop/Good Dood/Dev/candy-machine-mint-main/src/components/roadmap2.tsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(id, description) {\n  return {\n    id,\n    description,\n    status\n  };\n}\n\nconst rows = [createData(1, 'hello'), createData(2, 'hello'), createData(3, 'hello')];\nexport default function BasicTable() {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    style: {\n      backgroundColor: \"#212121\",\n      paddingLeft: \"80px\",\n      paddingRight: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        maxWidth: 400,\n        minHeight: 400\n      },\n      style: {\n        backgroundColor: \"#212121\"\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\"\n            },\n            align: \"left\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\"\n            },\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            color: \"#ffffff\"\n          },\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\"\n            },\n            component: \"th\",\n            scope: \"row\",\n            children: row.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\",\n              textDecoration: \"line-through\"\n            },\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/erickane/Desktop/Good Dood/Dev/candy-machine-mint-main/src/components/roadmap2.tsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","id","description","status","rows","BasicTable","backgroundColor","paddingLeft","paddingRight","maxWidth","minHeight","color","map","row","border","textDecoration"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,SAASC,UAAT,CACEC,EADF,EAEEC,WAFF,EAKE;AACA,SAAO;AAAED,IAAAA,EAAF;AAAMC,IAAAA,WAAN;AAAmBC,IAAAA;AAAnB,GAAP;AACD;;AAED,MAAMC,IAAI,GAAG,CACXJ,UAAU,CAAE,CAAF,EAAK,OAAL,CADC,EAEXA,UAAU,CAAE,CAAF,EAAK,OAAL,CAFC,EAGXA,UAAU,CAAE,CAAF,EAAK,OAAL,CAHC,CAAb;AAMA,eAAe,SAASK,UAAT,GAAsB;AACnC,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAEN,KAA3B;AAAkC,IAAA,KAAK,EAAE;AAAEO,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,WAAW,EAAE,MAA3C;AAAmDC,MAAAA,YAAY,EAAE;AAAjE,KAAzC;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAX;AAA+C,MAAA,KAAK,EAAE;AAAEJ,QAAAA,eAAe,EAAE;AAAnB,OAAtD;AAAsF,oBAAW,cAAjG;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAEK,cAAAA,KAAK,EAAE;AAAT,aAAlB;AAAuC,YAAA,KAAK,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAEA,cAAAA,KAAK,EAAE;AAAT,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,SAAD;AAAA,kBACGP,IAAI,CAACQ,GAAL,CAAUC,GAAD,iBACR,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAAEF,YAAAA,KAAK,EAAE;AAAT,WAAjB;AAEE,UAAA,EAAE,EAAE;AAAE,gDAAoC;AAAEG,cAAAA,MAAM,EAAE;AAAV;AAAtC,WAFN;AAAA,kCAIE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAEH,cAAAA,KAAK,EAAE;AAAT,aAAlB;AAAwC,YAAA,SAAS,EAAC,IAAlD;AAAuD,YAAA,KAAK,EAAC,KAA7D;AAAA,sBACGE,GAAG,CAACZ;AADP;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAEU,cAAAA,KAAK,EAAE,SAAT;AAAoBI,cAAAA,cAAc,EAAE;AAApC,aAAlB;AAAA,sBAAyEF,GAAG,CAACX;AAA7E;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WACOW,GAAG,CAACZ,EADX;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;KA3BuBI,U","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nfunction createData(\n  id: number,\n  description: string,\n\n\n) {\n  return { id, description, status };\n}\n\nconst rows = [\n  createData( 1, 'hello' ),\n  createData( 2, 'hello' ),\n  createData( 3, 'hello' ),\n];\n\nexport default function BasicTable() {\n  return (\n    <TableContainer component={Paper} style={{ backgroundColor: \"#212121\", paddingLeft: \"80px\", paddingRight: \"20px\" }}>\n      <Table sx={{ maxWidth: 400, minHeight: 400, }} style={{ backgroundColor: \"#212121\",}} aria-label=\"simple table\">\n        <TableHead >\n          <TableRow >\n            <TableCell style={{ color: \"#ffffff\"}} align=\"left\">ID</TableCell>\n            <TableCell style={{ color: \"#ffffff\"}} >Description</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow style={{ color: \"#ffffff\"}}\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell style={{ color: \"#ffffff\",}} component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell style={{ color: \"#ffffff\", textDecoration: \"line-through\"}} >{row.description}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}