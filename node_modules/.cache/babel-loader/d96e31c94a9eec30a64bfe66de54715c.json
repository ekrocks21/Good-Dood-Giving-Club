{"ast":null,"code":"var _jsxFileName = \"/Users/erickane/Desktop/Good Dood/Dev/candy-machine-mint-main/src/components/roadmap2.tsx\";\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(id, description, status) {\n  return {\n    id,\n    description,\n    status\n  };\n}\n\nconst rows = [createData(1, 'Develop Giving Model and Identify Operation Giving Day Beneficiary', 'Complete'), createData(2, 'Create Initial Art Concept #00 - The Original Good Dood Collection ', 'Complete'), createData(3, 'Learn how to generate 5001 NFTs', 'Complete'), createData(4, 'Build Landing Page Website', 'Complete'), createData(5, 'Connect with Jared Isaacman - Commander Inspiration4 ', 'Need Support'), createData(6, 'Ask Elon to Tweet ', 'Need Support'), createData(7, 'Launch OG Collection ', 'In Progress'), createData(8, 'Sell out Mint ', 'In Progress'), createData(9, 'Procure Products from Brands ', 'Dependent on #7'), createData(10, 'Form Partnership with Brands ', 'Need Support'), createData(11, 'Determine Democratized Giving Model', 'Open for Feedback'), createData(12, 'Create Collection #01 Art Concept', 'Not Started'), createData(11, 'Partner with a High Profile Designer ', 'Search Started'), createData(12, 'Design and Launch Good Dood Collection #01 - TBD ', 'Need Support'), createData(13, '? ', '?')];\nexport default function BasicTable() {\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    style: {\n      backgroundColor: \"#212121\",\n      paddingLeft: \"80px\",\n      paddingRight: \"20px\",\n      marginBottom: \"40px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        maxWidth: 400\n      },\n      style: {\n        backgroundColor: \"#212121\",\n        height: \"auto\"\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\"\n            },\n            align: \"left\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\"\n            },\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\"\n            },\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            color: \"#ffffff\"\n          },\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\"\n            },\n            component: \"th\",\n            scope: \"row\",\n            children: row.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\"\n            },\n            children: row.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              color: \"#ffffff\"\n            },\n            children: row.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/erickane/Desktop/Good Dood/Dev/candy-machine-mint-main/src/components/roadmap2.tsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","id","description","status","rows","BasicTable","backgroundColor","paddingLeft","paddingRight","marginBottom","maxWidth","height","color","map","row","border"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nfunction createData(\n  id: number,\n  description: string,\n  status: string,\n\n\n) {\n  return { id, description, status };\n}\n\nconst rows = [\n  createData( 1, 'Develop Giving Model and Identify Operation Giving Day Beneficiary', 'Complete' ),\n  createData( 2, 'Create Initial Art Concept #00 - The Original Good Dood Collection ', 'Complete' ),\n  createData( 3, 'Learn how to generate 5001 NFTs', 'Complete' ),\n  createData( 4, 'Build Landing Page Website', 'Complete' ),\n  createData( 5, 'Connect with Jared Isaacman - Commander Inspiration4 ', 'Need Support' ),\n  createData( 6, 'Ask Elon to Tweet ', 'Need Support' ),\n  createData( 7, 'Launch OG Collection ', 'In Progress' ),\n  createData( 8, 'Sell out Mint ', 'In Progress' ),\n  createData( 9, 'Procure Products from Brands ', 'Dependent on #7' ),\n  createData( 10, 'Form Partnership with Brands ', 'Need Support' ),\n  createData( 11, 'Determine Democratized Giving Model', 'Open for Feedback' ),\n  createData( 12, 'Create Collection #01 Art Concept', 'Not Started' ),\n  createData( 11, 'Partner with a High Profile Designer ', 'Search Started' ),\n  createData( 12, 'Design and Launch Good Dood Collection #01 - TBD ', 'Need Support' ),\n  createData( 13, '? ', '?' ),\n];\n\nexport default function BasicTable() {\n  return (\n    <TableContainer component={Paper} style={{ backgroundColor: \"#212121\", paddingLeft: \"80px\", paddingRight: \"20px\", marginBottom: \"40px\" }}>\n      <Table sx={{ maxWidth: 400 }} style={{ backgroundColor: \"#212121\", height: \"auto\",}} aria-label=\"simple table\">\n        <TableHead >\n          <TableRow >\n            <TableCell style={{ color: \"#ffffff\"}} align=\"left\">ID</TableCell>\n            <TableCell style={{ color: \"#ffffff\"}} >Description</TableCell>\n            <TableCell style={{ color: \"#ffffff\"}} >Status</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow style={{ color: \"#ffffff\"}}\n              key={row.id}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell style={{ color: \"#ffffff\",}} component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell style={{ color: \"#ffffff\", }} >{row.description}</TableCell>\n              <TableCell style={{ color: \"#ffffff\", }} >{row.status}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}